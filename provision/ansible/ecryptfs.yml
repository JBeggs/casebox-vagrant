#
# File: ecryptfs.yml
# Description: Setup cryptfs.
# Tags: install, mount, umount
#
---

- hosts: "*"

  #
  # Variables
  #
  vars:
    - passphrase: "{{ passphrase }}"
    - encrypted_root: "{{ encrypted_root }}"
    - ecryptfs_dir: '/root/.ecryptfs'
    - sig_file: '/root/.ecryptfs/sig-cache.txt'

  #
  # Tasks
  #
  tasks:
    - name: 'USER | Add root user to fuse group.'
      shell: "adduser root fuse"
      become: yes
      tags:
        - install

    # Umount
    - name: 'ECRYPTFS | Umount data drive.'
      shell: "umount {{ encrypted_root }}"
      become: yes
      ignore_errors: true
      tags:
        - umount

    # Mount
    - name: 'USER | Create directory.'
      replace: dest='/etc/pam.d/sshd' regexp='^session    optional     pam_keyinit.so force revoke$' replace='session    optional     pam_keyinit.so'
      become: yes
      tags:
        - mount

    - name: 'USER | Create directory.'
      shell: "mkdir -p {{ item }}"
      with_items: "{{ encrypted_root }}"
      become: yes
      ignore_errors: true
      tags:
        - mount

    - name: 'ECRYPTFS | Check for already mounted encrypted drive'
      shell: grep '{{ encrypted_root }} ecryptfs' /etc/mtab
      register: mtab_contents
      failed_when: false
      changed_when: false
      become: yes
      tags:
        - mount

    - name: 'ECRYPTFS | Add tokens into user session keyring.'
      shell: 'printf "%s" "{{ passphrase }}" | ecryptfs-add-passphrase | grep -o "\[.*\]" | sed "s/\[//g;s/\]//g"'
      register: password_hash
      become: yes
      tags:
        - mount

    - name: "ECRYPTFS | Create .ecryptfs dir."
      file: path="{{ ecryptfs_dir }}" state=directory
      become: yes
      tags:
        - mount

    - name: "ECRYPTFS | Create sig-cache file."
      file: path="{{ sig_file }}" state=touch
      become: yes
      tags:
        - mount

    - name: "ECRYPTFS | Populate sig-cache file."
      shell: "echo '{{ item }}' > {{ sig_file }}"
      with_items:
        - "{{ password_hash.stdout }}"
      become: yes
      tags:
        - mount

    - name: 'ECRYPTFS | Mount data drive.'
      shell: "mount -t ecryptfs -o 'key=passphrase:passphrase_passwd={{ passphrase }},user,noauto,ecryptfs_passthrough=no,ecryptfs_cipher=aes,ecryptfs_key_bytes=32,ecryptfs_unlink_sigs,ecryptfs_enable_filename_crypto=y,ecryptfs_fnek_sig={{ password_hash.stdout }},verbosity=1' {{ encrypted_root }}/ {{ encrypted_root }}/"
      when: "'{{ encrypted_root }}' not in mtab_contents.stdout"
      become: yes
      tags:
        - mount

    - name: 'STAT | Check mysql file.'
      stat: path='/var/lib/mysql/debian-5.5.flag'
      register: stat_mysql
      become: yes
      tags:
        - mount

    - name: 'SERVICE | Restart MySQL.'
      shell: 'service mysql restart'
      when: stat_mysql.stat.exists == True
      become: yes
      tags:
        - mount

    - name: 'STAT | Check solr file.'
      stat: path='/var/solr/data/solr.xml'
      register: stat_solr
      become: yes
      tags:
        - mount

    - name: 'SERVICE | Restart Solr.'
      shell: 'service solr restart'
      when: stat_solr.stat.exists == True
      become: yes
      tags:
        - mount

    - name: 'STAT | Check /var/www/casebox/web/index.php file.'
      stat: path='/var/www/casebox/web/index.php'
      register: stat_index
      become: yes
      tags:
        - mount

    - name: 'SERVICE | Restart Nginx.'
      shell: 'service nginx restart'
      when: stat_index.stat.exists == True
      become: yes
      tags:
        - mount
