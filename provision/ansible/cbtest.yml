#
# File: playbook.yml
# Description: Casebox2 Ansible installation provision
#
---

- hosts: "*"

  #
  # Variables
  #
  vars:

    # MySQL
    - root_db_pass_file: '/root/.mysql.root.password'

    # Casebox
    - casebox_server_name: '192.168.33.3.xip.io'
    - casebox_core: 'cbtest'
    - casebox_root_dir: '/var/www/casebox/'
    - casebox_htdocs_dir: '/var/www/casebox/web'
    - casebox_default_email: 'admin@example.com'
    - casebox_db_user: "{{ casebox_core }}"
    - casebox_db_pass_file: '~/.mysql.{{ casebox_core }}.password'

    - casebox_db_names:
      - { db: '{{ casebox_core }}', file: '{{ casebox_root_dir }}var/backup/cb_default.sql'}

    - casebox_db_hosts:
        - '127.0.0.1'
        - 'localhost'
        - '::1'
        - '%'
        - '{{ ansible_hostname }}'

    - casebox_solr_host: '127.0.0.1'
    - casebox_solr_port: '8983'
    - casebox_solr_username: ''
    - casebox_solr_password: ''

    # Nginx
    - nginx_sites:
      - { src: '/etc/nginx/sites-available/http_{{ casebox_core }}.conf', dest: '/etc/nginx/sites-enabled/http_{{ casebox_core }}.conf' }
      - { src: '/etc/nginx/sites-available/https_{{ casebox_core }}.conf', dest: '/etc/nginx/sites-enabled/https_{{ casebox_core }}.conf' }

  #
  # Tasks
  #
  tasks:

    - name: "NGINX | Remove Casebox http virtual host."
      file: path="/etc/nginx/sites-available/http_{{ casebox_core }}.conf" state=absent
      become: yes

    - name: "NGINX | Add http virtual host."
      lineinfile: dest="/etc/nginx/sites-available/http_{{ casebox_core }}.conf"
                  line="{{ item }}"
                  create=yes
                  state=present
                  insertafter=EOF
      with_items:
        - "server {"
        - "    listen 80;\n"
        - "    server_name {{ casebox_server_name }};"
        - "    root {{ casebox_htdocs_dir }};"
        - "    rewrite ^/index\\.php/?(.*)$ /$1 permanent;\n"
        - "    location / {"
        - "        index index.php;"
        - "        try_files $uri @rewriteapp;"
        - "    }\n"
        - "    location @rewriteapp { "
        - "        rewrite ^(.*)$ /index.php/$1 last;"
        - "    }\n"
        - "    location ~ ^/(index)\\.php(/|$) {"
        - "        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;"
        - "        fastcgi_split_path_info ^(.+\\.php)(/.*)$;"
        - "        include fastcgi_params;"
        - "        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;"
        - "        fastcgi_param  HTTPS off;"
        - "    }\n"
        - "    error_log /var/log/nginx/http_{{ casebox_core }}.error.log;"
        - "    access_log /var/log/nginx/http_{{ casebox_core }}.access.log;"
        - "}\n"
      become: yes

    - name: "NGINX | Remove Casebox https virtual host."
      file: path="/etc/nginx/sites-available/https_{{ casebox_core }}.conf" state=absent
      become: yes

    - name: "NGINX | Add Casebox https virtual host."
      lineinfile: dest="/etc/nginx/sites-available/https_{{ casebox_core }}.conf"
                  line="{{ item }}"
                  create=yes
                  state=present
                  insertafter=EOF
      with_items:
        - "server {"
        - "    listen 443;\n"
        - "    server_name {{ casebox_server_name }};"
        - "    root {{ casebox_htdocs_dir }};"
        - "    rewrite ^/index\\.php/?(.*)$ /$1 permanent;\n"
        - "    ssl on;"
        - "    ssl_certificate {{ casebox_root_dir }}var/ssl/ssl-cert.pem;"
        - "    ssl_certificate_key {{ casebox_root_dir }}var/ssl/ssl-cert.key;\n"
        - "    location / {"
        - "        index index.php;"
        - "        try_files $uri @rewriteapp;"
        - "    }\n"
        - "    location @rewriteapp { "
        - "        rewrite ^(.*)$ /index.php/$1 last;"
        - "    }\n"
        - "    location ~ ^/(index)\\.php(/|$) {"
        - "        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;"
        - "        fastcgi_split_path_info ^(.+\\.php)(/.*)$;"
        - "        include fastcgi_params;"
        - "        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;"
        - "        fastcgi_param  HTTPS on;"
        - "    }\n"
        - "    error_log /var/log/nginx/https_{{ casebox_core }}.error.log;"
        - "    access_log /var/log/nginx/https_{{ casebox_core }}.access.log;"
        - "}\n"
      become: yes

    - name: "NGINX | Enable Casebox virtual hosts."
      file: src="{{ item.src }}"
            dest="{{ item.dest }}"
            state=link
      with_items: "{{ nginx_sites }}"
      become: yes

    - name: "NGINX | Restart Nginx webserver."
      service: name=nginx state=restarted
      become: yes

    # MySQL
    - name: "MYSQL | Check MySQL root password."
      stat: path={{ root_db_pass_file }}
      register: root_db_pass_file_exist
      become: yes

    - name: "MYSQL | Fetch MySQL root password."
      shell: "cat {{ root_db_pass_file }}"
      register: mysq_root_password
      when: root_db_pass_file_exist.stat.exists == True
      become: yes

    # Casebox
    - name: "CASEBOX | Check casebox config file."
      stat: path="{{ casebox_root_dir }}app/config/{{ casebox_core }}/parameters.yml"
      register: config_file_exist

    - name: "CASEBOX | Check casebox MySQL password."
      stat: path={{ casebox_db_pass_file }}
      register: db_pass_file_exist

    - name: "CASEBOX | Generate casebox password."
      lineinfile: dest="{{ casebox_db_pass_file }}"
                  line="{{ lookup('pipe', 'openssl rand -hex 10') }}"
                  create=yes
                  state=present
      when: db_pass_file_exist.stat.exists == False and config_file_exist.stat.exists == False

    - name: "CASEBOX | Fetch mysql casebox password."
      shell: "cat {{ casebox_db_pass_file }}"
      register: mysql_casebox_password
      when: config_file_exist.stat.exists == False

    - name: "CASEBOX | Fetch mysql root password."
      shell: "cat {{ root_db_pass_file }}"
      register: mysq_root_password
      when: config_file_exist.stat.exists == False and root_db_pass_file_exist.stat.exists == True
      become: yes

    - name: "CASEBOX | Create databases."
      mysql_db: name={{ item.db }} login_user=root login_password={{ mysq_root_password.stdout }} state=present
      with_items: "{{ casebox_db_names }}"
      when: config_file_exist.stat.exists == False

    - name: "CASEBOX | Grant user permissions."
      mysql_user: name={{ casebox_db_user }}
                  host={{ item[0] }}
                  priv={{ item[1].db }}.*:ALL
                  append_privs=yes
                  password={{ mysql_casebox_password.stdout }}
                  login_user=root
                  login_password={{ mysq_root_password.stdout }}
                  state=present
      with_nested:
        - "{{ casebox_db_hosts }}"
        - "{{ casebox_db_names }}"
      when: config_file_exist.stat.exists == False

    - name: "CASEBOX | Import Casebox databases."
      mysql_db: name={{ item.db }}
                login_user=root
                login_password={{ mysq_root_password.stdout }}
                target={{ item.file }}
                state=import
      with_items: "{{ casebox_db_names }}"
      when: config_file_exist.stat.exists == False

    - name: "CASEBOX | Check casebox MySQL password."
      stat: path={{ casebox_db_pass_file }}
      register: db_pass_file_exist

    - name: "CASEBOX | Fetch casebox MySQL password."
      shell: "cat {{ casebox_db_pass_file }}"
      register: mysql_casebox_password
      when: db_pass_file_exist.stat.exists == True

    - name: "CASEBOX | Check casebox config file."
      stat: path="{{ casebox_root_dir }}/app/config/{{ casebox_core }}/parameters.yml"
      register: stat_config_file

    - name: "CASEBOX | Casebox core config."
      lineinfile: dest="{{ casebox_root_dir }}/app/config/config_{{ casebox_core }}.yml"
                  line="{{ item }}"
                  create=yes
      become: yes
      with_items:
        - 'imports:'
        - "    - { resource: {{ casebox_core }}/parameters.yml }"
        - '    - { resource: config.yml }'
      when: stat_config_file.stat.exists == False

    - name: "CASEBOX | Casebox parameters."
      lineinfile: dest="{{ casebox_root_dir }}app/config/{{ casebox_core }}/parameters.yml"
                  line="{{ item }}"
                  create=yes
      with_items:
        - '# This file is auto-generated during the composer install'
        - 'parameters:'
        - "    core_name: {{ casebox_core }}"
        - '    locale: en'
        - '    server_name: http://192.168.33.3.xip.io/'
        - '    db_host: 127.0.0.1'
        - '    db_port: 3306'
        - "    db_name: {{ casebox_core }}"
        - "    db_user: {{ casebox_db_user }}"
        - "    db_pass: {{ mysql_casebox_password.stdout }}"
        - "    solr_host: {{ casebox_solr_host }}"
        - "    solr_port: {{ casebox_solr_port }}"
        - "    solr_core: {{ casebox_core }}"
        - "    solr_core_log: {{ casebox_core }}_log"
        - "    solr_username: {{ casebox_solr_username }}"
        - "    solr_password: {{ casebox_solr_password }}"
        - '    session.lifetime: 4320'
        - '    admin_email: admin@example.com'
        - '    sender_email: emails.sender@example.com'
        - '    comments_pass:'
        - '    mailer_transport: smtp'
        - '    mailer_host: 127.0.0.1'
        - '    mailer_user: null'
        - '    mailer_password: null'
        - "    secret: {{ lookup('pipe', 'openssl rand -hex 13') }}"
        - '    prefix: cb'
        - '    solr_schema: http'
        - "    convert_doc_unoconv_cmd: '/usr/bin/python3 /usr/bin/unoconv'"
        - "    convert_doc_url: 'http://convert.devops.site/document/convert'"
        - '    converter: unoconv'
        - '    redis_host: 127.0.0.1'
        - '    redis_port: 6379'
      when: config_file_exist.stat.exists == False
      become: yes

    - name: "CASEBOX | Solr create core."
      shell: "{{ casebox_root_dir }}bin/console casebox:solr:create --env={{ casebox_core }}"
      ignore_errors: yes

    - name: "CASEBOX | Solr index core."
      shell: "{{ casebox_root_dir }}bin/console casebox:solr:update --all=true --env={{ casebox_core }}"
      ignore_errors: yes

    # Restart services
    - name: "NGINX | Restart Nginx webserver."
      shell: "service nginx restart"
      become: yes

    - name: "MYSQL | Restart MySQL server."
      shell: "service mysql restart"
      become: yes

    - name: "SOLR | Restart Solr server."
      shell: "service solr restart"
      become: yes