#
# File: database.yml
# Description: Database backup restore
#
---

- hosts: "*"

  #
  # Vars
  #
  vars:
    - docroot: "{{ docroot }}"
    - parameters_file: "{{ parameters_file }}"
    - sql_file: "{{ dump_file }}"
    - script: '/var/provision/python/var.py'
    - definer: sed -i 's/DEFINER=[^*]*\*/\*/g'

  #
  # Tasks
  #
  tasks:
    - name: 'parameters | fetch db_host.'
      shell: "python {{ script }} --file={{ parameters_file }} --var=[parameters][db_host]"
      register: db_host
      tags:
        - backup
        - restore

    - name: 'parameters | fetch db_port.'
      shell: "python {{ script }} --file={{ parameters_file }} --var=[parameters][db_port]"
      register: db_port
      tags:
        - backup
        - restore

    - name: 'parameters | fetch db_user.'
      shell: "python {{ script }} --file={{ parameters_file }} --var=[parameters][db_user]"
      register: db_user
      tags:
        - backup
        - restore

    - name: 'parameters | fetch db_pass.'
      shell: "python {{ script }} --file={{ parameters_file }} --var=[parameters][db_pass]"
      register: db_pass
      tags:
        - backup
        - restore

    - name: 'parameters | fetch db_name.'
      shell: "python {{ script }} --file={{ parameters_file }} --var=[parameters][db_name]"
      register: db_name
      tags:
        - backup
        - restore

    - name: 'parameters | fetch core_name.'
      shell: "python {{ script }} --file={{ parameters_file }} --var=[parameters][core_name]"
      register: core_name
      tags:
        - backup
        - restore

    - name: 'database | backup.'
      shell: " mysqldump --user={{ db_user.stdout }} --password={{ db_pass.stdout }} --host={{ db_host.stdout }} --port={{ db_port.stdout }} {{ db_name.stdout }} > {{ sql_file }}"
      tags:
        - backup

    - name: 'shell | clean definer.'
      shell: "{{ definer }} {{ sql_file }}"
      tags:
        - backup

    - name: 'database | restore.'
      shell: " mysql --user={{ db_user.stdout }} --password={{ db_pass.stdout }} --host={{ db_host.stdout }} --port={{ db_port.stdout }} {{ db_name.stdout }} < {{ sql_file }}"
      tags:
        - restore

    - name: 'casebox | update solr core.'
      shell: "php {{ docroot }}/bin/console casebox:solr:update --all=true --env={{ core_name.stdout }}"
      tags:
        - restore
